# Generated by Django 4.1.7 on 2023-04-15 21:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=13, unique=True)),
                ('profile_image', models.ImageField(upload_to='user_profile_image/')),
                ('profile_token', models.CharField(max_length=100)),
                ('otp', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=False, verbose_name='status')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_partner', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '1. Accounts',
            },
        ),
        migrations.CreateModel(
            name='AppImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='app_images')),
                ('detail', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': '9. App Images',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=55)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': '6. City',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_id', models.CharField(max_length=100, unique=True)),
                ('is_city_approved', models.BooleanField(default=False)),
                ('office_address', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=255)),
                ('id_proof', models.CharField(max_length=255)),
                ('is_id_proof', models.BooleanField(default=False)),
                ('id_proof_front', models.ImageField(upload_to='user_id_proof_image/')),
                ('id_proof_back', models.ImageField(upload_to='user_id_proof_image/')),
                ('address_proof', models.CharField(max_length=255)),
                ('is_address_proof', models.BooleanField(default=False)),
                ('address_proof_front', models.ImageField(upload_to='user_id_address_image/')),
                ('address_proof_back', models.ImageField(upload_to='user_id_address_image/')),
                ('partner_token', models.CharField(max_length=100)),
                ('service_type_name', models.CharField(max_length=255)),
                ('partner_status', models.CharField(choices=[('OTHER', 'OTHER'), ('In Progress', 'In Progress'), ('Update', 'Update'), ('Approved', 'Approved'), ('On hold', 'On hold'), ('Blocked', 'Blocked'), ('In Active', 'In Active')], default='OTHER', max_length=50)),
                ('service_status', models.CharField(choices=[('OTHER', 'OTHER'), ('Active', 'Active'), ('In Active', 'In Active')], default='OTHER', max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('profile_token', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_profile_token', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '3. Partner',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.CharField(max_length=55)),
                ('service_name', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': '4. Service',
            },
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('additional_details', models.CharField(max_length=500)),
                ('service_request_image_id', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('partner_token', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='service_request_partner_token', to='accounts.partner')),
                ('profile_token', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='service_request_profile_token', to=settings.AUTH_USER_MODEL)),
                ('service_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='serviceRequest_service_id', to='accounts.service')),
            ],
            options={
                'verbose_name_plural': '7. Service Request',
            },
        ),
        migrations.CreateModel(
            name='UserComplaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complaint', models.CharField(max_length=255)),
                ('booking_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usercomplaint_booking_id', to='accounts.servicerequest')),
            ],
            options={
                'verbose_name_plural': '10. User Complaint',
            },
        ),
        migrations.CreateModel(
            name='SubService',
            fields=[
                ('sub_service_id', models.CharField(max_length=55, primary_key=True, serialize=False)),
                ('sub_service_name', models.CharField(max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('service_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subservice_service', to='accounts.service')),
            ],
            options={
                'verbose_name_plural': '5. SubService',
            },
        ),
        migrations.CreateModel(
            name='ServiceRequestImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(max_length=255)),
                ('booking_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicerequestimage_booking_id', to='accounts.servicerequest')),
            ],
            options={
                'verbose_name_plural': '8. Service Request Images',
            },
        ),
        migrations.AddField(
            model_name='servicerequest',
            name='sub_service_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='serviceRequest_sub_service_id', to='accounts.subservice'),
        ),
        migrations.AddField(
            model_name='partner',
            name='sub_service_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='partner_subservice', to='accounts.subservice'),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('pincode', models.CharField(max_length=6)),
                ('is_default', models.BooleanField(default=False)),
                ('address', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='address_profile_token', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': '2. Address',
            },
        ),
    ]
